# From https://hub.docker.com/r/valian/docker-python-opencv-ffmpeg
# with the version changed to 3.4.5 (rather than 3.4.2)
# 
# https://www.learnopencv.com/install-opencv3-on-ubuntu/

FROM cedorman/docker-python-opencv-3.4.5-ffmpeg:android.part1
LABEL maintainer "clark.dorman@nextcentury.com"

# Get the actual sdk and build tools of the appropriate version 
RUN echo "Installing build-tools, platforms, platform-tools" && \
    sh -c "/bin/echo -e 'y' | /android_sdk/tools/bin/sdkmanager 'build-tools;27.0.3' 'platforms;android-26' 'platform-tools'" && \ 
    \ 
# Get the native development kit
    echo "Installing native development kit" && \ 
    mkdir /android_ndk && \
    cd /android_ndk && \
    wget https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip &&\
    unzip android-ndk-r14b-linux-x86_64.zip && \
    rm -rf android-ndk-r14b-linux-x86_64.zip && \
    \
# Build the OpenCV Android SDK
    echo "Building opencv android sdk" && \ 
    mkdir /OpenCV-android-sdk && \
    cd /OpenCV-android-sdk && \
    python /opencv/platforms/android/build_sdk.py --ndk_path=/android_ndk/android-ndk-r14b --sdk_path=/android_sdk --no_ccache --extra_modules_path=/opencv_contrib/modules/ --config=/opencv/platforms/android/ndk-16.config.py --force_copy --force_opencv_toolchain && \
 # Clean Opencv Android SDK Build
    cd /OpenCV-android-sdk && \
    mv OpenCV-android-sdk ~/ && \
    rm -rf /OpenCV-android-sdk && \ 
    \
# Clean as much as possible
    echo "Cleaning as much as possible" && \ 
    apt-get -y remove \
    python3-dev \
    libatlas-base-dev \
    gfortran \
    libjasper-dev \
    libgtk2.0-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libjasper-dev \
    libv4l-dev \
    ninja-build \
    ant \
    && \
    apt-get clean && \
    rm -rf /opencv /opencv_contrib /var/lib/apt/lists/*

# Define default command.
CMD ["python3 --version"]

